trigger:
  branches:
    include:
    - 'master'
    - 'releases/*'
  paths:
    exclude:
    - '*/docs/*'
    - 'docs/*'
    - '*/*.md'
    - '*.md'
    - '*/layer_tests_summary/*'
    - '*/conformance/*'
    - 'tools/*'
    - 'tests/layer_tests/*'

pr:
  drafts: 'false'
  branches:
    include:
    - 'master'
    - 'releases/*'
  paths:
    exclude:
    - '*/docs/*'
    - 'docs/*'
    - '*/*.md'
    - '*.md'
    - '*/layer_tests_summary/*'
    - '*/conformance/*'
    - 'tools/*'
    - 'tests/layer_tests/*'

resources:
  repositories:
  - repository: openvino
    type: github
    endpoint: openvinotoolkit
    name: openvinotoolkit/openvino

  - repository: openvino_contrib
    type: github
    endpoint: openvinotoolkit
    name: openvinotoolkit/openvino_contrib

  - repository: testdata
    type: github
    endpoint: openvinotoolkit
    name: openvinotoolkit/testdata

jobs:
- job: CUDAPlugin_Lin
  timeoutInMinutes: '60'

  pool:
    name: LIN_VMSS_VENV_F16S_U20_WU2

  variables:
    system.debug: true
    VSTS_HTTP_RETRY: 5
    VSTS_HTTP_TIMEOUT: 200
    BUILD_TYPE: Release
    HOME_DIR: $(Agent.HomeDirectory)
    REPO_DIR: $(Build.Repository.LocalPath)
    OPENVINO_REPO_DIR: $(REPO_DIR)/../openvino
    MODELS_PATH: $(REPO_DIR)/../testdata
    WORK_DIR: $(Pipeline.Workspace)/_w
    BUILD_DIR: $(WORK_DIR)/build
    BIN_DIR: $(OPENVINO_REPO_DIR)/bin/intel64/$(BUILD_TYPE)
    INSTALL_DIR: $(WORK_DIR)/install_pkg
    SETUPVARS: $(INSTALL_DIR)/setupvars.sh
    GRADLE_VER: 7.1.1

  steps:
  - script: |
      curl -H Metadata:true --noproxy "*" "http://169.254.169.254/metadata/instance?api-version=2019-06-01"
      echo # prev line output doesn't end with eol
      whoami
      uname -a
      echo Python3 info ; which python3 ; python3 --version
      echo Python info ; which python ; python --version
      echo Java info ; which java ; java -version
      echo gcc info ; which gcc ; gcc --version
      echo cmake info ; which cmake ; cmake --version
      lsb_release
      env
      cat /proc/cpuinfo
      cat /proc/meminfo
      cat /etc/fstab
      vmstat -s
      df
      lsblk -o NAME,HCTL,SIZE,MOUNTPOINT | grep -i "sd"
      free -h
    displayName: 'System info'

  - script: |
      rm -rf $(WORK_DIR) ; mkdir $(WORK_DIR)
      rm -rf $(BUILD_DIR) ; mkdir $(BUILD_DIR)
    displayName: 'Make dir'

  - checkout: self
    clean: 'true'
    submodules: 'true'
    path: openvino

  - checkout: openvino_contrib
    clean: 'true'
    submodules: 'true'
    path: openvino_contrib

  - script: |
      set -e
      curl -fsSL https://get.docker.com -o get-docker.sh
      sudo sh get-docker.sh
      # Speed up build
      sudo apt --assume-yes install unzip
      wget https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-linux.zip
      unzip ninja-linux.zip
    displayName: 'Install dependencies'

  - script: |
      sudo docker pull openvino.azurecr.io/openvino_ci/cuda-ubuntu2004:2022.1
      sudo docker run --volume $(REPO_DIR)/../:/root/repos --volume $(WORK_DIR):/root/w \
        openvino.azurecr.io/openvino_ci/cuda-ubuntu2004:2022.1 \
        bash -c "
          sudo -E /root/repos/openvino/install_build_dependencies.sh &&
          python3 -m pip install -r /root/repos/openvino/src/bindings/python/requirements.txt &&
          cmake -GNinja \
            -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DENABLE_CPPLINT=OFF \
            -DCMAKE_BUILD_TYPE=$(BUILD_TYPE) \
            -DOPENVINO_EXTRA_MODULES=/root/repos/openvino_contrib/modules/nvidia_plugin \
            -DENABLE_INTEL_CPU=OFF \
            -DENABLE_INTEL_GPU=OFF \
            -DENABLE_INTEL_GNA=OFF \
            -DENABLE_OV_TF_FRONTEND=OFF \
            -DENABLE_OV_PADDLE_FRONTEND=OFF \
            -DENABLE_OV_PYTORCH_FRONTEND=OFF \
            -DENABLE_OV_ONNX_FRONTEND=OFF \
            -DENABLE_PYTHON=OFF \
            -DENABLE_TESTS=ON \
            -S /root/repos/openvino \
            -B /root/w/build &&
          cmake --build /root/w/build --parallel --config Release --verbose -- ov_nvidia_func_tests ov_nvidia_unit_tests"
    displayName: 'Docker build Lin'

  - script: ls -alR $(OPENVINO_REPO_DIR)/bin/
    displayName: 'List bin files'
